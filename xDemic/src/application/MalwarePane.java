package application;

import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.ScrollPane.ScrollBarPolicy;
import javafx.scene.control.Slider;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class MalwarePane extends VBox {
	private MainView mainView;
	
	private Pane configWindow;
	private ScrollPane malwareScrollList;
	private VBox malwareList;
	private VBox malware;
	
	public MalwarePane(MainView mainView) {
		this.mainView = mainView;
		Button addMalware = new Button("Add Malware");
		addMalware.setPrefWidth(400);
		addMalware.setOnAction(new EventHandler<ActionEvent>() {
			@Override
			public void handle(ActionEvent event) {
				configWindow = new Pane();
				configWindow.setId("configWindow");
				
				Scene scene = new Scene(configWindow, 400, 400);
				scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
				
				Stage stage = new Stage();
				stage.getIcons().add(new Image("file:logo.png"));
				stage.setTitle("Add new malware");
				stage.setScene(scene);
				stage.show();
				
				VBox options = new VBox();
				
				TextField name = new TextField();
				
				Slider chanceInfection = new Slider(0, 100, 10);
				chanceInfection.setShowTickLabels(true);
				chanceInfection.setShowTickMarks(true);
				chanceInfection.setMajorTickUnit(10);
				chanceInfection.setMinorTickCount(5);
				chanceInfection.setBlockIncrement(1);
				
				Slider patchRelease = new Slider(0, 100, 10);
				patchRelease.setShowTickLabels(true);
				patchRelease.setShowTickMarks(true);
				patchRelease.setMajorTickUnit(10);
				patchRelease.setMinorTickCount(5);
				patchRelease.setBlockIncrement(1);
				
				Button apply = new Button("Apply");
				apply.setOnAction(new EventHandler<ActionEvent>() {
					@Override
					public void handle(ActionEvent event) {
						if ((name.getText() != null && !name.getText().isEmpty())) {
							mainView.getSimulation().getMalwareList().add(new Malware(name.getText(), chanceInfection.getValue(), (int)patchRelease.getValue()));
				        } else {
				        	mainView.getSimulation().getMalwareList().add(new Malware("Default", chanceInfection.getValue(), (int)patchRelease.getValue()));
				        }
						update();
						stage.hide();
					}
				});
				
				options.getChildren().addAll(name, chanceInfection, patchRelease, apply);
				configWindow.getChildren().add(options);
			}
		});
		malwareList = new VBox();
		
		malwareScrollList = new ScrollPane();	
		malwareScrollList.setContent(malwareList);
		malwareScrollList.setPrefWidth(400);
		malwareScrollList.setMaxHeight(550);
		malwareScrollList.setHbarPolicy(ScrollBarPolicy.NEVER);
		malwareScrollList.setVbarPolicy(ScrollBarPolicy.ALWAYS);
		
		if(mainView.getSimulation().getMalwareList().isEmpty()) {
			malwareScrollList.setVisible(false);
		}
		
		getChildren().addAll(addMalware, malwareScrollList);
		update();
	}
	
	public void update() {
		malwareList.getChildren().clear();
		if(!mainView.getSimulation().getMalwareList().isEmpty()) {
			malwareScrollList.setVisible(true);
			for(int i=0; i<mainView.getSimulation().getMalwareList().size(); i++) {
				malware = new VBox();
				malware.setId("malwareList");
				malware.setPrefWidth(400);
				
				malware.getChildren().add(new Text("Name: " + mainView.getSimulation().getMalwareList().get(i).getName()));
				malware.getChildren().add(new Text("Chance of Infection: " + mainView.getSimulation().getMalwareList().get(i).getChanceInfection()));
				malware.getChildren().add(new Text("Patch Release: " + mainView.getSimulation().getMalwareList().get(i).getPatchRelease()));
				
				malwareList.getChildren().add(malware);
			}
		}
		malwareScrollList.setContent(malwareList);
	}
}
