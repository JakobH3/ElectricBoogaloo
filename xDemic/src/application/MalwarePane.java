package application;

import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.ScrollPane.ScrollBarPolicy;
import javafx.scene.control.Separator;
import javafx.scene.control.Slider;
import javafx.scene.control.TextField;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;

public class MalwarePane extends VBox {
	private MainView mainView;
	
	private ScrollPane malwareScrollList;
	private VBox malwareList;
	private VBox malware;
	private Pane configWindow;
	
	public MalwarePane(MainView mainView) {
		this.mainView = mainView;
		
		malwareList = new VBox();
		malwareList.setSpacing(10);
		
		malwareScrollList = new ScrollPane();	
		malwareScrollList.setContent(malwareList);
		malwareScrollList.setPrefWidth(400);
		malwareScrollList.setPrefHeight(600);
		malwareScrollList.setHbarPolicy(ScrollBarPolicy.NEVER);
		malwareScrollList.setVbarPolicy(ScrollBarPolicy.ALWAYS);
		
		getChildren().addAll(malwareScrollList);
		update();
	}
	
	public void update() {
		malwareList.getChildren().clear();
		if(!mainView.getSimulation().getMalwareList().isEmpty()) {
			malwareScrollList.setVisible(true);
			for(int i=0; i<mainView.getSimulation().getMalwareList().size(); i++) {
				malware = new VBox();
				
				malware.getChildren().add(new Text("Name: " + mainView.getSimulation().getMalwareList().get(i).getName()));
				malware.getChildren().add(new Text("Chance of Infection: " + mainView.getSimulation().getMalwareList().get(i).getChanceInfection()));
				malware.getChildren().add(new Text("Patch Release: " + mainView.getSimulation().getMalwareList().get(i).getPatchRelease()));
				
				malwareList.getChildren().add(malware);
			}
		} else {
			malwareScrollList.setVisible(false);
		}
	}
	
	public void add() {
		if(mainView.getState() == MainView.EDITING) {
			configWindow = new Pane();
			
			Scene scene = new Scene(configWindow);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
			
			VBox options = new VBox();
			options.setSpacing(5);
			
			Text nameLabel = new Text("Name");
			TextField name = new TextField();
			
			Text chanceInfectionLabel = new Text("Chance of Infection");
			Slider chanceInfection = new Slider(0, 100, 10);
			chanceInfection.setShowTickLabels(true);
			chanceInfection.setShowTickMarks(true);
			
			Text patchReleaseLabel = new Text("Patch Release");
			Slider patchRelease = new Slider(0, 100, 10);
			patchRelease.setShowTickLabels(true);
			patchRelease.setShowTickMarks(true);
			patchRelease.setSnapToTicks(true);
			
			Button apply = new Button("Apply");
			apply.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent e) {
					if ((name.getText() != null && !name.getText().isEmpty())) {
						mainView.getSimulation().getMalwareList().add(new Malware(name.getText(), chanceInfection.getValue(), (int)patchRelease.getValue()));
			        } else {
			        	mainView.getSimulation().getMalwareList().add(new Malware("Default", chanceInfection.getValue(), (int)patchRelease.getValue()));
			        }
					mainView.setCenter(mainView.getOutput());
					mainView.draw();
				}
			});
		
			Button cancel = new Button("Cancel");
			cancel.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent e) {
					mainView.setCenter(mainView.getOutput());
					update();
				}
			});
			
			options.getChildren().addAll(nameLabel, name, chanceInfectionLabel, chanceInfection, patchReleaseLabel, patchRelease, apply, cancel);
			configWindow.getChildren().add(options);
			mainView.setCenter(configWindow);
		}
	}
}